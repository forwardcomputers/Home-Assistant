# https://www.home-assistant.io/components/sensor.wunderground/
# https://www.home-assistant.io/components/sensor.yr/
# https://www.home-assistant.io/components/sensor.template/
# https://github.com/pnbruckner/homeassistant-config/blob/master/custom_components/sun.py
# https://github.com/andrey-git/home-assistant-custom-ui
# https://community.home-assistant.io/t/custom-ui-weather-state-card/23008/245

homeassistant:
  customize:
    sensor.environment_canada_radar:
      hidden: true
    sun.sun:
      hidden: true
    sensor.yr_cloudiness:
      hidden: true

sun:
  monitored_conditions:
    - azimuth
    - elevation
    - next_dawn
    - next_dusk
    - next_midnight
    - next_noon
    - sunrise
    - sunset
  scan_interval:
    minutes: 1

weather:
  - platform: openweathermap
    api_key: !secret openweathermap_api_key
    mode: daily

sensor:
  - platform: command_line
    name: ec_forecast_summary_text
    command: "xmllint --xpath 'string(//currentConditions/condition)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_forecast_icon
    command: "xmllint --xpath 'string(//currentConditions/iconCode)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_temperature
    command: "xmllint --xpath 'string(//currentConditions/temperature)' /tmp/toronto.xml"
    unit_of_measurement: "째C"
  - platform: command_line
    name: ec_dewpoint
    command: "xmllint --xpath 'string(//currentConditions/dewpoint)' /tmp/toronto.xml"
    unit_of_measurement: "째C"
  - platform: command_line
    name: ec_humidex
    command: "xmllint --xpath 'string(//currentConditions/humidex)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_wind_chill
    command: "xmllint --xpath 'string(//currentConditions/windChill)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_pressure
    command: "xmllint --xpath 'string(//currentConditions/pressure)' /tmp/toronto.xml"
    unit_of_measurement: "kPa"
  - platform: command_line
    name: ec_visibility
    command: "xmllint --xpath 'string(//currentConditions/visibility)' /tmp/toronto.xml"
    unit_of_measurement: "km"
  - platform: command_line
    name: ec_relative_humidity
    command: "xmllint --xpath 'string(//currentConditions/relativeHumidity)' /tmp/toronto.xml"
    unit_of_measurement: "%"
  - platform: command_line
    name: ec_wind_speed
    command: "xmllint --xpath 'string(//currentConditions/wind/speed)' /tmp/toronto.xml"
    unit_of_measurement: "km/h"
  - platform: command_line
    name: ec_wind_gust
    command: "xmllint --xpath 'string(//currentConditions/wind/gust)' /tmp/toronto.xml"
    unit_of_measurement: "km/h"
  - platform: command_line
    name: ec_wind_direction
    command: "xmllint --xpath 'string(//currentConditions/wind/direction)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_pop
    command: "xmllint --xpath 'string(//forecastGroup/forecast[1]/abbreviatedForecast/pop)' /tmp/toronto.xml"
    unit_of_measurement: "%"
  - platform: command_line
    name: ec_uv
    command: "xmllint --xpath 'string(//forecastGroup/forecast[1]/uv/@category)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_uv_index
    command: "xmllint --xpath 'string(//forecastGroup/forecast[1]/uv/index)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_1_name
    command: "xmllint --xpath 'string(//forecastGroup/forecast[1]/period)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_1_icon
    command: "xmllint --xpath 'string(//forecastGroup/forecast[1]/abbreviatedForecast/iconCode)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_1_summary_text
    command: "xmllint --xpath 'string(//forecastGroup/forecast[1]/textSummary)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_2_name
    command: "xmllint --xpath 'string(//forecastGroup/forecast[2]/period)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_2_icon
    command: "xmllint --xpath 'string(//forecastGroup/forecast[2]/abbreviatedForecast/iconCode)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_2_summary_text
    command: "xmllint --xpath 'string(//forecastGroup/forecast[2]/textSummary)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_3_name
    command: "xmllint --xpath 'string(//forecastGroup/forecast[3]/period)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_3_icon
    command: "xmllint --xpath 'string(//forecastGroup/forecast[3]/abbreviatedForecast/iconCode)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_3_summary_text
    command: "xmllint --xpath 'string(//forecastGroup/forecast[3]/textSummary)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_4_name
    command: "xmllint --xpath 'string(//forecastGroup/forecast[4]/period)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_4_icon
    command: "xmllint --xpath 'string(//forecastGroup/forecast[4]/abbreviatedForecast/iconCode)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_4_summary_text
    command: "xmllint --xpath 'string(//forecastGroup/forecast[4]/textSummary)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_5_name
    command: "xmllint --xpath 'string(//forecastGroup/forecast[5]/period)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_5_icon
    command: "xmllint --xpath 'string(//forecastGroup/forecast[5]/abbreviatedForecast/iconCode)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_5_summary_text
    command: "xmllint --xpath 'string(//forecastGroup/forecast[5]/textSummary)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_6_name
    command: "xmllint --xpath 'string(//forecastGroup/forecast[6]/period)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_6_icon
    command: "xmllint --xpath 'string(//forecastGroup/forecast[6]/abbreviatedForecast/iconCode)' /tmp/toronto.xml"
  - platform: command_line
    name: ec_6_summary_text
    command: "xmllint --xpath 'string(//forecastGroup/forecast[6]/textSummary)' /tmp/toronto.xml"

  # - platform: environment_canada
  #   monitored_conditions:
  #     - temperature
  #     - dewpoint
  #     - wind_chill
  #     - humidex
  #     - pressure
  #     - tendency
  #     - humidity
  #     - visibility
  #     - condition
  #     - wind_speed
  #     - wind_gust
  #     - wind_dir
  #     - high_temp
  #     - low_temp
  #     - pop
  #     - warning
  #     - weather_1d
  #     - weather_1n
  - platform: yr
    monitored_conditions:
      - cloudiness
  - platform: template
    sensors:
      ec_forecast_summary:
        friendly_name: Weather Summary
        value_template: >-
          Currently {{ states('sensor.ec_temperature') }}째C with {{ states('sensor.ec_forecast_summary_text') }}
        entity_picture_template: >-
          "https://weather.gc.ca/weathericons/{{ states('sensor.ec_forecast_icon') }}.gif"
        icon_template: >-
          mdi:gauge
      ec_feels_like:
        friendly_name: Feels like
        value_template: >-
          {% if not is_state('sensor.ec_wind_chill', '') %}
            {{ states('sensor.ec_wind_chill') }}
          {% elif not is_state('sensor.ec_humidex', '') %}
            {{ states('sensor.ec_humidex') }}
          {% else %}
            {{ states('sensor.ec_temperature') }}째C 
          {% endif %}
        icon_template: >-
          mdi:gauge
      ec_1_summary:
        friendly_name_template: >-
          {{ states('sensor.ec_1_name') }}
        value_template: >-
          {{ states('sensor.ec_1_summary_text') }}
        entity_picture_template: >-
          "https://weather.gc.ca/weathericons/{{ states('sensor.ec_1_icon') }}.gif"
        icon_template: >-
          mdi:gauge
      ec_2_summary:
        friendly_name_template: >-
          {{ states('sensor.ec_2_name') }}
        value_template: >-
          {{ states('sensor.ec_2_summary_text') }}
        entity_picture_template: >-
          "https://weather.gc.ca/weathericons/{{ states('sensor.ec_2_icon') }}.gif"
        icon_template: >-
          mdi:gauge
      ec_3_summary:
        friendly_name_template: >-
          {{ states('sensor.ec_3_name') }}
        value_template: >-
          {{ states('sensor.ec_3_summary_text') }}
        entity_picture_template: >-
          "https://weather.gc.ca/weathericons/{{ states('sensor.ec_3_icon') }}.gif"
        icon_template: >-
          mdi:gauge
      ec_4_summary:
        friendly_name_template: >-
          {{ states('sensor.ec_4_name') }}
        value_template: >-
          {{ states('sensor.ec_4_summary_text') }}
        entity_picture_template: >-
          "https://weather.gc.ca/weathericons/{{ states('sensor.ec_4_icon') }}.gif"
        icon_template: >-
          mdi:gauge
      ec_5_summary:
        friendly_name_template: >-
          {{ states('sensor.ec_5_name') }}
        value_template: >-
          {{ states('sensor.ec_5_summary_text') }}
        entity_picture_template: >-
          "https://weather.gc.ca/weathericons/{{ states('sensor.ec_5_icon') }}.gif"
        icon_template: >-
          mdi:gauge
      ec_6_summary:
        friendly_name_template: >-
          {{ states('sensor.ec_6_name') }}
        value_template: >-
          {{ states('sensor.ec_6_summary_text') }}
        entity_picture_template: >-
          "https://weather.gc.ca/weathericons/{{ states('sensor.ec_6_icon') }}.gif"
        icon_template: >-
          mdi:gauge
      indoor_humidity:
        friendly_name: 'Indoor Humidity'
        unit_of_measurement: '%'
        icon_template: mdi:water-percent
        value_template: '{{ states.climate.thermostat.attributes.current_humidity | int }}'
      sunrise_time:
        friendly_name: Sunrise
        unit_of_measurement: AM
        icon_template: mdi:weather-sunset-up
        value_template: '{{ as_timestamp(states.sun.sun.attributes.next_dawn) | timestamp_custom("%-I:%M") }}'
      sunset_time:
        friendly_name: Sunset
        unit_of_measurement: PM
        icon_template: mdi:weather-sunset-down
        value_template: '{{ as_timestamp(states.sun.sun.attributes.next_dusk) | timestamp_custom("%-I:%M") }}'
      environment_canada_radar:
        friendly_name: Environment Canada Radar
        value_template: WKR

shell_command:
  download_toronto_forecast: curl -s --retry 3 --output /tmp/toronto.xml http://dd.weatheroffice.ec.gc.ca/citypage_weather/xml/ON/s0000458_e.xml

automation:
  - id: Download EC forecast
    alias: Download EC forecast
    trigger:
      - platform: homeassistant
        event: start
      - platform: time_pattern
        minutes: 30
    action:
      - service: shell_command.download_toronto_forecast
